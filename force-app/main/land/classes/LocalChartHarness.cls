public class LocalChartHarness {
    // String chartType = Env.get('chart') + 'Design';

    // if (chartType == '') {
    //     System.debug('Missing Chart Type Argument: npm run land -- chart=name');
    //     return '';
    // }

    private  Map<String, Object> getConfig() {
        Map<String, Object> config = new Map<String, Object>();
        config.put('w', 400);
        config.put('h', 50);

        List<Map<String, Object>> canvasRows = new List<Map<String, Object>>();
        
        Map<String, Object> row;
        List<Map<String, Object>> rowComponents;
        Map<String, Object> component;

        /* **************** */
        // Row 1
        /* **************** */
        row = new Map<String, Object>(); 
        rowComponents = new List<Map<String, Object>>();

        row.put('h', 20);
        
        // ProgressBarDesign
        component = new Map<String, Object>(); 
        component.put('t', 'ProgressBarDesign');
        rowComponents.add(component);

        // ProgressBarDesign
        component = new Map<String, Object>(); 
        component.put('t', 'ProgressBarDesign');
        rowComponents.add(component);

        row.put('cmps', rowComponents);
        canvasRows.add(row);

        /* **************** */
        // Spacer
        /* **************** */
        row = new Map<String, Object>(); 
        row.put('h', 10);
        canvasRows.add(row);

        /* **************** */
        // Row 2
        /* **************** */
        row = new Map<String, Object>(); 
        rowComponents = new List<Map<String, Object>>();

        row.put('h', 20);
        
        // ProgressBarDesign
        component = new Map<String, Object>(); 
        component.put('t', 'ProgressBarDesign');
        rowComponents.add(component);

        // ProgressBarDesign
        component = new Map<String, Object>(); 
        component.put('t', 'ProgressBarDesign');
        rowComponents.add(component);

        // ProgressBarDesign
        component = new Map<String, Object>(); 
        component.put('t', 'ProgressBarDesign');
        rowComponents.add(component);

        row.put('cmps', rowComponents);
        canvasRows.add(row);

        /* **************** */
        config.put('rows', canvasRows);

        return config;
    }

    public String renderSVG() {
        Map<String, Object> chartConfig = this.getConfig();
        
        Integer canvasWidth = (Integer)chartConfig.get('w');
        Integer canvasHeight =(Integer)chartConfig.get('h');

        String svgIconStyle = '';

        String themeVars = '--theme-1:#3296ED;'
                         + '--theme-2:#77B9F2;'
                         + '--theme-3:#9D53F2;'
                         + '--theme-4:#C398F5;'
                         + '--theme-5:#26ABA4;'
                         + '--theme-6:#4ED4CD;'
                         + '--white:white;\n';

        svgIconStyle += '--svg-battery-rounded:url("data:image/svg+xml,%3Csvg%20version%3D%221.1%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20width%3D%2217%22%20height%3D%2216%22%20viewBox%3D%220%200%2017%2016%22%3E%0A%3Crect%20x%3D%2210%22%20y%3D%227.1%22%20fill%3D%22none%22%20width%3D%222%22%20height%3D%221.6%22%2F%3E%0A%3Cpath%20d%3D%22M8.9%2C3H5.1C4.5%2C3%2C4%2C3.5%2C4%2C4.1v7.8C4%2C12.5%2C4.5%2C13%2C5.1%2C13h3.8c0.6%2C0%2C1.1-0.5%2C1.1-1.1V4.1C10%2C3.5%2C9.5%2C3%2C8.9%2C3z%22%2F%3E%0A%3Cpath%20d%3D%22M0%2C1.2v13.7C0%2C15.5%2C0.5%2C16%2C1.2%2C16h11.7c0.6%2C0%2C1.2-0.5%2C1.2-1.2v-3.3h2.2c0.5%2C0%2C0.8-0.4%2C0.8-0.8V5.3c0-0.5-0.4-0.8-0.8-0.8%0A%09l-2.2%2C0V2.1V1.2C14%2C0.5%2C13.5%2C0%2C12.8%2C0H1.2C0.5%2C0%2C0%2C0.5%2C0%2C1.2z%20M12%2C2v12H2V2H12z%22%2F%3E%0A%3C%2Fsvg%3E%0A");\n';
        
        String svgCode = '<svg xmlns="http://www.w3.org/2000/svg" preserveAspectRatio="xMinYMin slice" width="' + canvasWidth + '" height="' + canvasHeight + '" viewBox="0 0 ' + canvasWidth + ' ' + canvasHeight +'">\n'
                + '<style>:root{--cw-px:' + canvasWidth + 'px;--ch-px:' + canvasHeight + 'px;--vw-100:100vw;--max-vw:min(var(--cw-px), var(--vw-100));color:#181818;font-size:12px;font-family:-apple-system,"system-ui","Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol"}@-moz-document url-prefix(){:root{--vw-100:50vw}}'
                
                // Salesforce Font
                // + '@font-face { font-family: "Salesforce Sans"; font-weight: bold; font-style: normal; font-display: swap; src:url("data:font/woff2;charset=utf-8;base64,") format("woff2");}'
                // + '@font-face { font-family: "Salesforce Sans"; font-weight: normal; font-style: normal; font-display: swap; src:url("data:font/woff2;charset=utf-8;base64,") format("woff2");}'
                
                // Shared Helpers
                + '.tcd,div.tc span,span.tc{overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.sz1{--bdy-h: 20px}.sz1 .h-sz1{display:none !important}.sz2{--bdy-h: 40px}.sz2 .h-sz2{display:none !important}.sz3{--bdy-h: 60px}.sz3 .h-sz3{display:none !important}.fx,.fxc,.fxr{display:flex}.fxc{flex-direction:column}.fxr{flex-direction:row}.fg{flex-grow:1}.fwnw{flex-wrap:nowrap}.aife{align-items:flex-end}.jcsb{justify-content:space-between}.jcc{justify-content:center}.vatb{vertical-align:text-bottom}.vatt{vertical-align:text-top}.tac{text-align:center}.tar{text-align:right}.wsnp{white-space:nowrap}.w1,.w1h1{width:100%}.h1,.w1h1{height:100%}.wmvw{width:var(--max-vw)}.bdyh{height:var(--bdy-h)}.hpx{height:var(--h-px)}.chpx{height:var(--ch-px)}.fslh75{font-size:.75rem;line-height:.75rem}.b{font-weight:500}.b6{font-weight:600}'

                // Shared Component Styles
                + '.c{min-width:20px;container-type:inline-size}.r{height:var(--h-px);gap:5px;}'

                // Theme + Icons
                + '\n:root{\n'
                + themeVars
                + svgIconStyle
                + '}</style>\n'

                + '<foreignObject x="0" y="0" class="w1 chpx"><div class="wmvw fxc" style="gap:0px;" xmlns="http://www.w3.org/1999/xhtml">';
        
        List<String> usedStyles = new List<String>();

        List<Map<String, Object>> canvasRows = (List<Map<String, Object>>)chartConfig.get('rows');
        for ( Map<String, Object> canvasRow: canvasRows) {
            Integer rowHeight = (Integer)canvasRow.get('h');
            List<Map<String, Object>> rowComponents = (List<Map<String, Object>>)canvasRow.get('cmps');

            if (rowComponents == null) {
                // RowSpaceDesign
                Map<String, Object> spaceComponent = new Map<String, Object>();
                spaceComponent.put('t', 'RowSpaceDesign');
                rowComponents = new List<Map<String, Object>>{ spaceComponent };
            }

            svgCode += '<div style="--h-px:' + rowHeight + 'px;" class="r fxr fwnw">';
            for ( Map<String, Object> component: rowComponents) {
                String chartType = (String)component.get('t');

                if (chartType == 'RowSpaceDesign') {
                    svgCode += '<div class="RowSpaceDesign c fxc w1h1 fg"></div>';
                    continue;
                }

                Type t = Type.forName( chartType);
                if (t == null) {
                    System.debug( 'Invalid Chart Class: ' + chartType);    
                    return '';
                }

                MiniChartsDesign design = (MiniChartsDesign)t.newInstance();

                if (usedStyles.contains(chartType) == false) {
                    svgCode += '<style>' + design.getStyle()+ '</style>';
                    usedStyles.add(chartType);
                }

                svgCode += '<div class="' + chartType + ' c fxc w1h1 fg sz' + (rowHeight/20) + '">'
                + design.render()
                + '</div>';
            }

            svgCode += '</div>';
        }

        return svgCode + '</div></foreignObject>\n</svg>';
    }
}